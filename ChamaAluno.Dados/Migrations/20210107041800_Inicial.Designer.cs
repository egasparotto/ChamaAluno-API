// <auto-generated />
using System;
using ChamaAluno.Dados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChamaAluno.Dados.Migrations
{
    [DbContext(typeof(ContextoDaAplicacao))]
    [Migration("20210107041800_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Alunos.Entidades.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FOTO");

                    b.Property<int>("IdDaTurma")
                        .HasColumnType("int")
                        .HasColumnName("IDDATURMA");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RG");

                    b.HasKey("Id")
                        .HasName("PK_ALUNOS");

                    b.HasIndex("IdDaTurma");

                    b.ToTable("ALUNOS");
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Alunos.Entidades.AlunoDoResponsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<bool>("Domingo")
                        .HasColumnType("bit")
                        .HasColumnName("DOMINGO");

                    b.Property<int>("IdDoAluno")
                        .HasColumnType("int")
                        .HasColumnName("IDDOALUNO");

                    b.Property<int>("IdDoResponsavel")
                        .HasColumnType("int")
                        .HasColumnName("IDDORESPONSAVEL");

                    b.Property<DateTime>("InicioDaValidade")
                        .HasColumnType("datetime2")
                        .HasColumnName("INICIODAVALIDADE");

                    b.Property<bool>("Quarta")
                        .HasColumnType("bit")
                        .HasColumnName("QUARTA");

                    b.Property<bool>("Quinta")
                        .HasColumnType("bit")
                        .HasColumnName("QUINTA");

                    b.Property<bool>("Sabado")
                        .HasColumnType("bit")
                        .HasColumnName("SABADO");

                    b.Property<bool>("Segunda")
                        .HasColumnType("bit")
                        .HasColumnName("SEGUNDA");

                    b.Property<bool>("Sexta")
                        .HasColumnType("bit")
                        .HasColumnName("SEXTA");

                    b.Property<bool>("Terca")
                        .HasColumnType("bit")
                        .HasColumnName("TERCA");

                    b.Property<DateTime?>("TerminoDaValidade")
                        .HasColumnType("datetime2")
                        .HasColumnName("TERMINODAVALIDADE");

                    b.HasKey("Id")
                        .HasName("PK_ALUNOSRESP");

                    b.HasIndex("IdDoAluno");

                    b.HasIndex("IdDoResponsavel", "InicioDaValidade", "TerminoDaValidade");

                    b.ToTable("ALUNOSRESP");
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Colaboradores.Entidades.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<string>("ChaveDoisFatores")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CHAVEDOISFATORES");

                    b.Property<bool>("DoisFatores")
                        .HasColumnType("bit")
                        .HasColumnName("DOISFATORES");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("bit")
                        .HasColumnName("EMAILCONFIRMADO");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FOTO");

                    b.Property<int>("IdDoPerfil")
                        .HasColumnType("int")
                        .HasColumnName("IDDOPERFIL");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RG");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SENHA");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id")
                        .HasName("PK_COLABORADORES");

                    b.HasIndex("IdDoPerfil");

                    b.ToTable("COLABORADORES");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoisFatores = false,
                            Email = "Mestre",
                            EmailConfirmado = false,
                            IdDoPerfil = 1,
                            Nome = "Usuário Mestre",
                            Senha = "CclrsUlmNI3cQWINMvkUDT+7BdV1P92R3uMDlVoeKku4wcMI"
                        });
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Responsaveis.Entidades.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<string>("Cartao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CARTAO");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FOTO");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RG");

                    b.HasKey("Id")
                        .HasName("PK_RESPONSAVEIS");

                    b.ToTable("RESPONSAVEIS");
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Turmas.Entidades.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id")
                        .HasName("PK_TURMAS");

                    b.ToTable("TURMAS");
                });

            modelBuilder.Entity("EGF.Dominio.Autenticacao.Perfis.Entidades.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CodigoInterno")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CODIGOINTERNO");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("PERFIS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoInterno = "0001",
                            Descricao = "Administrador"
                        });
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Alunos.Entidades.Aluno", b =>
                {
                    b.HasOne("ChamaAluno.Dominio.Cadastros.Turmas.Entidades.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("IdDaTurma")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Alunos.Entidades.AlunoDoResponsavel", b =>
                {
                    b.HasOne("ChamaAluno.Dominio.Cadastros.Alunos.Entidades.Aluno", "Aluno")
                        .WithMany("AlunosResponsaveis")
                        .HasForeignKey("IdDoAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChamaAluno.Dominio.Cadastros.Responsaveis.Entidades.Responsavel", "Responsavel")
                        .WithMany("AlunosResponsaveis")
                        .HasForeignKey("IdDoResponsavel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Colaboradores.Entidades.Colaborador", b =>
                {
                    b.HasOne("EGF.Dominio.Autenticacao.Perfis.Entidades.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("IdDoPerfil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Alunos.Entidades.Aluno", b =>
                {
                    b.Navigation("AlunosResponsaveis");
                });

            modelBuilder.Entity("ChamaAluno.Dominio.Cadastros.Responsaveis.Entidades.Responsavel", b =>
                {
                    b.Navigation("AlunosResponsaveis");
                });
#pragma warning restore 612, 618
        }
    }
}
